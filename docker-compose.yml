services:
  api:
    image: python:3.12-slim
    container_name: sipcha-api
    restart: always
    environment:
      - JWT_SECRET=change-me
      # Add later when you wire Twilio:
      # - TWILIO_ACCOUNT_SID=
      # - TWILIO_AUTH_TOKEN=
      # - VERIFY_SERVICE_SID=
      # - SYNC_SERVICE_SID=
    volumes:
      - ./api/app:/app
      - ./api/requirements.txt:/tmp/requirements.txt:ro
    command: >
      /bin/sh -lc "pip install --no-cache-dir -r /tmp/requirements.txt &&
      python -m uvicorn app.main:app --host 0.0.0.0 --port 8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks: [dokploy-network]

  web-build:
    image: node:20-alpine
    container_name: sipcha-web-build
    working_dir: /src
    volumes:
      - ./web:/src
      - web_dist:/out
    # use npm install (not ci) unless you commit package-lock.json
    command: >
      sh -lc "npm install &&
      npm run build &&
      rm -rf /out/* &&
      cp -r dist/* /out/"
    networks: [dokploy-network]

  web:
    image: nginx:alpine
    container_name: sipcha-web
    restart: always
    depends_on:
      web-build:
        condition: service_completed_successfully
    volumes:
      - web_dist:/usr/share/nginx/html:ro
    # you can omit ports if using Dokploy ingress; keeping for quick local probe
    ports:
      - ":80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/"]
      interval: 15s
      timeout: 3s
      retries: 5
    networks: [dokploy-network]

networks:
  dokploy-network:
    external: true

volumes:
  web_dist:
