services:
  api:
    image: python:3.12-slim
    container_name: sipcha-api
    restart: always
    environment:
      - JWT_SECRET=${JWT_SECRET:-change-me}
      - JWT_EXPIRE_MINUTES=${JWT_EXPIRE_MINUTES:-1440}
      - ADMIN_PROVISIONING_TOKEN=${ADMIN_PROVISIONING_TOKEN:-change-me}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./api/app:/app
      - ./api/requirements.txt:/tmp/requirements.txt:ro
      # mount built SPA into API container at /app/static
      - web_dist:/app/static:ro
    command: >
      /bin/sh -lc "pip install --no-cache-dir -r /tmp/requirements.txt &&
      python -m uvicorn app.main:app --host 0.0.0.0 --port 8000"
    healthcheck:
      test: ["CMD", "python", "-c",
             "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/api/healthz',timeout=3).getcode()==200 else sys.exit(1)"]
      interval: 10s
      timeout: 4s
      retries: 6
      start_period: 10s
    networks: [dokploy-network]
    expose:
      - "8000"
    ports:
      - ":8000"    # random host port -> 8000 (direct access)

  web-build:
    image: node:20-bookworm-slim
    container_name: sipcha-web-build
    working_dir: /src
    environment:
      - CI=1
      - npm_config_fund=false
      - npm_config_audit=false
    volumes:
      - ./web:/src
      - web_dist:/out
      - npm_cache:/root/.npm
    command: >
      sh -lc "
        set -e;
        node -v && npm -v;
        npm install --no-audit --no-fund;
        npx vite build || ./node_modules/.bin/vite build;
        rm -rf /out/*;
        cp -a dist/. /out/;
        ls -la /out
      "
    networks: [dokploy-network]

networks:
  dokploy-network:
    external: true

volumes:
  web_dist:
  npm_cache:
